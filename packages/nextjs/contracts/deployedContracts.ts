/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  // Ethereum Sepolia (Chain ID: 11155111)
  11155111: {
    SmartWalletFactory: {
      address: "0x9c18A0863F62b141D766Ec2AC0E712FA35857D6f",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_backendCoordinator",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidUser",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "WalletAlreadyExists",
          type: "error",
        },
        {
          inputs: [],
          name: "WalletCreationFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "oldCoordinator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newCoordinator",
              type: "address",
            },
          ],
          name: "BackendCoordinatorUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "wallet",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
          ],
          name: "WalletCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "disableWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "users",
              type: "address[]",
            },
          ],
          name: "createWalletsBatch",
          outputs: [
            {
              internalType: "address[]",
              name: "wallets",
              type: "address[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getWalletBytecodeHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "hash",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "getWalletOwner",
          outputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getWallet",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "hasWallet",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "isWalletValid",
          outputs: [
            {
              internalType: "bool",
              name: "valid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "predictWalletAddress",
          outputs: [
            {
              internalType: "address",
              name: "predictedAddress",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalWallets",
          outputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 0,
    },
  },
  // Base Sepolia (Chain ID: 84532)
  84532: {
    SmartWalletFactory: {
      address: "0x078572F22e95021d2b0172B989553522184D89e5",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_backendCoordinator",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidUser",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "WalletAlreadyExists",
          type: "error",
        },
        {
          inputs: [],
          name: "WalletCreationFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "oldCoordinator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newCoordinator",
              type: "address",
            },
          ],
          name: "BackendCoordinatorUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "wallet",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
          ],
          name: "WalletCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "disableWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "users",
              type: "address[]",
            },
          ],
          name: "createWalletsBatch",
          outputs: [
            {
              internalType: "address[]",
              name: "wallets",
              type: "address[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getWalletBytecodeHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "hash",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "getWalletOwner",
          outputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getWallet",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "hasWallet",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "isWalletValid",
          outputs: [
            {
              internalType: "bool",
              name: "valid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "predictWalletAddress",
          outputs: [
            {
              internalType: "address",
              name: "predictedAddress",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalWallets",
          outputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 0,
    },
  },
  // Arbitrum Sepolia (Chain ID: 421614)
  421614: {
    SmartWalletFactory: {
      address: "0x23F68aA80985C3765d5857be625802bf7E5F8211",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_backendCoordinator",
              type: "address",
            },
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "InvalidUser",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "OwnableInvalidOwner",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "OwnableUnauthorizedAccount",
          type: "error",
        },
        {
          inputs: [],
          name: "WalletAlreadyExists",
          type: "error",
        },
        {
          inputs: [],
          name: "WalletCreationFailed",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "oldCoordinator",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newCoordinator",
              type: "address",
            },
          ],
          name: "BackendCoordinatorUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "wallet",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bytes32",
              name: "salt",
              type: "bytes32",
            },
          ],
          name: "WalletCreated",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "disableWallet",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "createWallet",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address[]",
              name: "users",
              type: "address[]",
            },
          ],
          name: "createWalletsBatch",
          outputs: [
            {
              internalType: "address[]",
              name: "wallets",
              type: "address[]",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getWalletBytecodeHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "hash",
              type: "bytes32",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "getWalletOwner",
          outputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "getWallet",
          outputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "hasWallet",
          outputs: [
            {
              internalType: "bool",
              name: "exists",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "wallet",
              type: "address",
            },
          ],
          name: "isWalletValid",
          outputs: [
            {
              internalType: "bool",
              name: "valid",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "predictWalletAddress",
          outputs: [
            {
              internalType: "address",
              name: "predictedAddress",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalWallets",
          outputs: [
            {
              internalType: "uint256",
              name: "count",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "version",
          outputs: [
            {
              internalType: "string",
              name: "version",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 0,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
